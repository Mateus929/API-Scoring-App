openapi: 3.0.3
info:
  title: User API
  version: 1.0.0
  description: API for managing users, including registration, listing, and deletion.

servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://staging-api.example.com/v1
    description: Staging server

tags:
  - name: User Management
    description: Operations related to user accounts

paths:
  /users:
    get:
      tags: [User Management]
      summary: List all users
      description: Retrieve a list of all registered users.
      operationId: listUsers
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              examples:
                userList:
                  summary: Sample user list
                  value:
                    - id: "abc-123"
                      name: "John Smith"
                      email: "john@example.com"
                    - id: "def-456"
                      name: "Jane Doe"
                      email: "jane@example.com"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Missing or invalid API key"

    post:
      tags: [User Management]
      summary: Create a new user
      description: Register a new user with the system.
      operationId: createUser
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              id: "123e4567-e89b-12d3-a456-426614174000"
              name: "Alice Doe"
              email: "alice@example.com"
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: "123e4567-e89b-12d3-a456-426614174000"
                name: "Alice Doe"
                email: "alice@example.com"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Invalid input data"

  /users/{userId}:
    delete:
      tags: [User Management]
      summary: Delete a user
      description: Deletes the user by their unique identifier.
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique ID of the user to delete.
          schema:
            type: string
            example: "abc-123"
      security:
        - ApiKeyAuth: []
      responses:
        '204':
          description: User deleted successfully.
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "User not found"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    User:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
          example: "abc-123"
        name:
          type: string
          description: Full name of the user
          example: "John Doe"
        email:
          type: string
          format: email
          description: Email address of the user
          example: "john@example.com"

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message
          example: "Something went wrong"
